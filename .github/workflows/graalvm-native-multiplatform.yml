name: GraalVM Native Image builds

on: [push, pull_request]

jobs:
  build:
    name: HelloWorld on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4

      # See: https://docs.gluonhq.com/#platforms_linux_github_actions
      - uses: gluonhq/setup-graalvm@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          graalvm: '22.1.0.1-Final'
          jdk: 'java17'
          arch: 'x86_64'

      - name: Display tools versions
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version
          echo "arch: $arch"
          echo "os: $os"

      # Install extra required packaged on top of ubuntu-latest
      - name: Install libraries for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install libasound2-dev libavcodec-dev libavformat-dev libavutil-dev libgl-dev libgtk-3-dev libpango1.0-dev libxtst-dev

      # Create a staging directory where the binary will be copied into
      - name: Make staging directory
        run: mkdir staging

      # Build your project using Maven
      # The desktop profile is used, which means a native build will be created for the host platform (in this case Linux) itself.
      - name: Gluon Build and Package
        run: mvn -ntp gluonfx:build gluonfx:package

      # Copy the native binary to the staging directory
      - name: Copy native image to staging
        if: matrix.os == 'ubuntu-latest'
        run: cp -r target/gluonfx/x86_64-linux/HelloGluon staging

      # Upload the staging directory as a build artifact. You will be able to download this after the build finishes.
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
